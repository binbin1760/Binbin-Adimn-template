/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: server/cms-usr.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./enums";
import * as dependency_2 from "./page";
import * as dependency_3 from "./payload";
import * as pb_1 from "google-protobuf";
export class TableCmsUsrFilterRequest extends pb_1.Message {
  #one_of_decls: number[][] = [];
  constructor(
    data?:
      | any[]
      | {
          page?: dependency_2.PagerRequest;
          status?: dependency_1.Status;
          blurry?: string;
        }
  ) {
    super();
    pb_1.Message.initialize(
      this,
      Array.isArray(data) ? data : [],
      0,
      -1,
      [],
      this.#one_of_decls
    );
    if (!Array.isArray(data) && typeof data == "object") {
      if ("page" in data && data.page != undefined) {
        this.page = data.page;
      }
      if ("status" in data && data.status != undefined) {
        this.status = data.status;
      }
      if ("blurry" in data && data.blurry != undefined) {
        this.blurry = data.blurry;
      }
    }
  }
  get page() {
    return pb_1.Message.getWrapperField(
      this,
      dependency_2.PagerRequest,
      1
    ) as dependency_2.PagerRequest;
  }
  set page(value: dependency_2.PagerRequest) {
    pb_1.Message.setWrapperField(this, 1, value);
  }
  get hasPage() {
    return pb_1.Message.getField(this, 1) != null;
  }
  get status() {
    return pb_1.Message.getFieldWithDefault(
      this,
      2,
      dependency_1.Status._Status_UNSPECIFIED
    ) as dependency_1.Status;
  }
  set status(value: dependency_1.Status) {
    pb_1.Message.setField(this, 2, value);
  }
  get blurry() {
    return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
  }
  set blurry(value: string) {
    pb_1.Message.setField(this, 3, value);
  }
  static fromObject(data: {
    page?: ReturnType<typeof dependency_2.PagerRequest.prototype.toObject>;
    status?: dependency_1.Status;
    blurry?: string;
  }): TableCmsUsrFilterRequest {
    const message = new TableCmsUsrFilterRequest({});
    if (data.page != null) {
      message.page = dependency_2.PagerRequest.fromObject(data.page);
    }
    if (data.status != null) {
      message.status = data.status;
    }
    if (data.blurry != null) {
      message.blurry = data.blurry;
    }
    return message;
  }
  toObject() {
    const data: {
      page?: ReturnType<typeof dependency_2.PagerRequest.prototype.toObject>;
      status?: dependency_1.Status;
      blurry?: string;
    } = {};
    if (this.page != null) {
      data.page = this.page.toObject();
    }
    if (this.status != null) {
      data.status = this.status;
    }
    if (this.blurry != null) {
      data.blurry = this.blurry;
    }
    return data;
  }
  serialize(): Uint8Array;
  serialize(w: pb_1.BinaryWriter): void;
  serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
    const writer = w || new pb_1.BinaryWriter();
    if (this.hasPage)
      writer.writeMessage(1, this.page, () => this.page.serialize(writer));
    if (this.status != dependency_1.Status._Status_UNSPECIFIED)
      writer.writeEnum(2, this.status);
    if (this.blurry.length) writer.writeString(3, this.blurry);
    if (!w) return writer.getResultBuffer();
  }
  static deserialize(
    bytes: Uint8Array | pb_1.BinaryReader
  ): TableCmsUsrFilterRequest {
    const reader =
        bytes instanceof pb_1.BinaryReader
          ? bytes
          : new pb_1.BinaryReader(bytes),
      message = new TableCmsUsrFilterRequest();
    while (reader.nextField()) {
      if (reader.isEndGroup()) break;
      switch (reader.getFieldNumber()) {
        case 1:
          reader.readMessage(
            message.page,
            () => (message.page = dependency_2.PagerRequest.deserialize(reader))
          );
          break;
        case 2:
          message.status = reader.readEnum();
          break;
        case 3:
          message.blurry = reader.readString();
          break;
        default:
          reader.skipField();
      }
    }
    return message;
  }
  serializeBinary(): Uint8Array {
    return this.serialize();
  }
  static deserializeBinary(bytes: Uint8Array): TableCmsUsrFilterRequest {
    return TableCmsUsrFilterRequest.deserialize(bytes);
  }
}
export class TableCmsUsrFilterResponse extends pb_1.Message {
  #one_of_decls: number[][] = [];
  constructor(
    data?:
      | any[]
      | {
          page?: dependency_2.PagerResponse;
          raws?: TableCmsUserModel[];
        }
  ) {
    super();
    pb_1.Message.initialize(
      this,
      Array.isArray(data) ? data : [],
      0,
      -1,
      [2],
      this.#one_of_decls
    );
    if (!Array.isArray(data) && typeof data == "object") {
      if ("page" in data && data.page != undefined) {
        this.page = data.page;
      }
      if ("raws" in data && data.raws != undefined) {
        this.raws = data.raws;
      }
    }
  }
  get page() {
    return pb_1.Message.getWrapperField(
      this,
      dependency_2.PagerResponse,
      1
    ) as dependency_2.PagerResponse;
  }
  set page(value: dependency_2.PagerResponse) {
    pb_1.Message.setWrapperField(this, 1, value);
  }
  get hasPage() {
    return pb_1.Message.getField(this, 1) != null;
  }
  get raws() {
    return pb_1.Message.getRepeatedWrapperField(
      this,
      TableCmsUserModel,
      2
    ) as TableCmsUserModel[];
  }
  set raws(value: TableCmsUserModel[]) {
    pb_1.Message.setRepeatedWrapperField(this, 2, value);
  }
  static fromObject(data: {
    page?: ReturnType<typeof dependency_2.PagerResponse.prototype.toObject>;
    raws?: ReturnType<typeof TableCmsUserModel.prototype.toObject>[];
  }): TableCmsUsrFilterResponse {
    const message = new TableCmsUsrFilterResponse({});
    if (data.page != null) {
      message.page = dependency_2.PagerResponse.fromObject(data.page);
    }
    if (data.raws != null) {
      message.raws = data.raws.map((item) =>
        TableCmsUserModel.fromObject(item)
      );
    }
    return message;
  }
  toObject() {
    const data: {
      page?: ReturnType<typeof dependency_2.PagerResponse.prototype.toObject>;
      raws?: ReturnType<typeof TableCmsUserModel.prototype.toObject>[];
    } = {};
    if (this.page != null) {
      data.page = this.page.toObject();
    }
    if (this.raws != null) {
      data.raws = this.raws.map((item: TableCmsUserModel) => item.toObject());
    }
    return data;
  }
  serialize(): Uint8Array;
  serialize(w: pb_1.BinaryWriter): void;
  serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
    const writer = w || new pb_1.BinaryWriter();
    if (this.hasPage)
      writer.writeMessage(1, this.page, () => this.page.serialize(writer));
    if (this.raws.length)
      writer.writeRepeatedMessage(2, this.raws, (item: TableCmsUserModel) =>
        item.serialize(writer)
      );
    if (!w) return writer.getResultBuffer();
  }
  static deserialize(
    bytes: Uint8Array | pb_1.BinaryReader
  ): TableCmsUsrFilterResponse {
    const reader =
        bytes instanceof pb_1.BinaryReader
          ? bytes
          : new pb_1.BinaryReader(bytes),
      message = new TableCmsUsrFilterResponse();
    while (reader.nextField()) {
      if (reader.isEndGroup()) break;
      switch (reader.getFieldNumber()) {
        case 1:
          reader.readMessage(
            message.page,
            () =>
              (message.page = dependency_2.PagerResponse.deserialize(reader))
          );
          break;
        case 2:
          reader.readMessage(message.raws, () =>
            pb_1.Message.addToRepeatedWrapperField(
              message,
              2,
              TableCmsUserModel.deserialize(reader),
              TableCmsUserModel
            )
          );
          break;
        default:
          reader.skipField();
      }
    }
    return message;
  }
  serializeBinary(): Uint8Array {
    return this.serialize();
  }
  static deserializeBinary(bytes: Uint8Array): TableCmsUsrFilterResponse {
    return TableCmsUsrFilterResponse.deserialize(bytes);
  }
}
export class TableCmsUserModel extends pb_1.Message {
  #one_of_decls: number[][] = [];
  constructor(
    data?:
      | any[]
      | {
          id?: string;
          phone?: string;
          nickname?: string;
          gender?: dependency_1.Gender;
          avatar?: dependency_3.MediaMetaModel;
          status?: dependency_1.Status;
          roles?: string[];
        }
  ) {
    super();
    pb_1.Message.initialize(
      this,
      Array.isArray(data) ? data : [],
      0,
      -1,
      [7],
      this.#one_of_decls
    );
    if (!Array.isArray(data) && typeof data == "object") {
      if ("id" in data && data.id != undefined) {
        this.id = data.id;
      }
      if ("phone" in data && data.phone != undefined) {
        this.phone = data.phone;
      }
      if ("nickname" in data && data.nickname != undefined) {
        this.nickname = data.nickname;
      }
      if ("gender" in data && data.gender != undefined) {
        this.gender = data.gender;
      }
      if ("avatar" in data && data.avatar != undefined) {
        this.avatar = data.avatar;
      }
      if ("status" in data && data.status != undefined) {
        this.status = data.status;
      }
      if ("roles" in data && data.roles != undefined) {
        this.roles = data.roles;
      }
    }
  }
  get id() {
    return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
  }
  set id(value: string) {
    pb_1.Message.setField(this, 1, value);
  }
  get phone() {
    return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
  }
  set phone(value: string) {
    pb_1.Message.setField(this, 2, value);
  }
  get nickname() {
    return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
  }
  set nickname(value: string) {
    pb_1.Message.setField(this, 3, value);
  }
  get gender() {
    return pb_1.Message.getFieldWithDefault(
      this,
      4,
      dependency_1.Gender._Gender_UNSPECIFIED
    ) as dependency_1.Gender;
  }
  set gender(value: dependency_1.Gender) {
    pb_1.Message.setField(this, 4, value);
  }
  get avatar() {
    return pb_1.Message.getWrapperField(
      this,
      dependency_3.MediaMetaModel,
      5
    ) as dependency_3.MediaMetaModel;
  }
  set avatar(value: dependency_3.MediaMetaModel) {
    pb_1.Message.setWrapperField(this, 5, value);
  }
  get hasAvatar() {
    return pb_1.Message.getField(this, 5) != null;
  }
  get status() {
    return pb_1.Message.getFieldWithDefault(
      this,
      6,
      dependency_1.Status._Status_UNSPECIFIED
    ) as dependency_1.Status;
  }
  set status(value: dependency_1.Status) {
    pb_1.Message.setField(this, 6, value);
  }
  get roles() {
    return pb_1.Message.getFieldWithDefault(this, 7, []) as string[];
  }
  set roles(value: string[]) {
    pb_1.Message.setField(this, 7, value);
  }
  static fromObject(data: {
    id?: string;
    phone?: string;
    nickname?: string;
    gender?: dependency_1.Gender;
    avatar?: ReturnType<typeof dependency_3.MediaMetaModel.prototype.toObject>;
    status?: dependency_1.Status;
    roles?: string[];
  }): TableCmsUserModel {
    const message = new TableCmsUserModel({});
    if (data.id != null) {
      message.id = data.id;
    }
    if (data.phone != null) {
      message.phone = data.phone;
    }
    if (data.nickname != null) {
      message.nickname = data.nickname;
    }
    if (data.gender != null) {
      message.gender = data.gender;
    }
    if (data.avatar != null) {
      message.avatar = dependency_3.MediaMetaModel.fromObject(data.avatar);
    }
    if (data.status != null) {
      message.status = data.status;
    }
    if (data.roles != null) {
      message.roles = data.roles;
    }
    return message;
  }
  toObject() {
    const data: {
      id?: string;
      phone?: string;
      nickname?: string;
      gender?: dependency_1.Gender;
      avatar?: ReturnType<
        typeof dependency_3.MediaMetaModel.prototype.toObject
      >;
      status?: dependency_1.Status;
      roles?: string[];
    } = {};
    if (this.id != null) {
      data.id = this.id;
    }
    if (this.phone != null) {
      data.phone = this.phone;
    }
    if (this.nickname != null) {
      data.nickname = this.nickname;
    }
    if (this.gender != null) {
      data.gender = this.gender;
    }
    if (this.avatar != null) {
      data.avatar = this.avatar.toObject();
    }
    if (this.status != null) {
      data.status = this.status;
    }
    if (this.roles != null) {
      data.roles = this.roles;
    }
    return data;
  }
  serialize(): Uint8Array;
  serialize(w: pb_1.BinaryWriter): void;
  serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
    const writer = w || new pb_1.BinaryWriter();
    if (this.id.length) writer.writeString(1, this.id);
    if (this.phone.length) writer.writeString(2, this.phone);
    if (this.nickname.length) writer.writeString(3, this.nickname);
    if (this.gender != dependency_1.Gender._Gender_UNSPECIFIED)
      writer.writeEnum(4, this.gender);
    if (this.hasAvatar)
      writer.writeMessage(5, this.avatar, () => this.avatar.serialize(writer));
    if (this.status != dependency_1.Status._Status_UNSPECIFIED)
      writer.writeEnum(6, this.status);
    if (this.roles.length) writer.writeRepeatedString(7, this.roles);
    if (!w) return writer.getResultBuffer();
  }
  static deserialize(bytes: Uint8Array | pb_1.BinaryReader): TableCmsUserModel {
    const reader =
        bytes instanceof pb_1.BinaryReader
          ? bytes
          : new pb_1.BinaryReader(bytes),
      message = new TableCmsUserModel();
    while (reader.nextField()) {
      if (reader.isEndGroup()) break;
      switch (reader.getFieldNumber()) {
        case 1:
          message.id = reader.readString();
          break;
        case 2:
          message.phone = reader.readString();
          break;
        case 3:
          message.nickname = reader.readString();
          break;
        case 4:
          message.gender = reader.readEnum();
          break;
        case 5:
          reader.readMessage(
            message.avatar,
            () =>
              (message.avatar = dependency_3.MediaMetaModel.deserialize(reader))
          );
          break;
        case 6:
          message.status = reader.readEnum();
          break;
        case 7:
          pb_1.Message.addToRepeatedField(message, 7, reader.readString());
          break;
        default:
          reader.skipField();
      }
    }
    return message;
  }
  serializeBinary(): Uint8Array {
    return this.serialize();
  }
  static deserializeBinary(bytes: Uint8Array): TableCmsUserModel {
    return TableCmsUserModel.deserialize(bytes);
  }
}
export class CmsUsrRoleRequest extends pb_1.Message {
  #one_of_decls: number[][] = [];
  constructor(
    data?:
      | any[]
      | {
          uid?: string;
          roleIds?: string[];
        }
  ) {
    super();
    pb_1.Message.initialize(
      this,
      Array.isArray(data) ? data : [],
      0,
      -1,
      [2],
      this.#one_of_decls
    );
    if (!Array.isArray(data) && typeof data == "object") {
      if ("uid" in data && data.uid != undefined) {
        this.uid = data.uid;
      }
      if ("roleIds" in data && data.roleIds != undefined) {
        this.roleIds = data.roleIds;
      }
    }
  }
  get uid() {
    return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
  }
  set uid(value: string) {
    pb_1.Message.setField(this, 1, value);
  }
  get roleIds() {
    return pb_1.Message.getFieldWithDefault(this, 2, []) as string[];
  }
  set roleIds(value: string[]) {
    pb_1.Message.setField(this, 2, value);
  }
  static fromObject(data: {
    uid?: string;
    roleIds?: string[];
  }): CmsUsrRoleRequest {
    const message = new CmsUsrRoleRequest({});
    if (data.uid != null) {
      message.uid = data.uid;
    }
    if (data.roleIds != null) {
      message.roleIds = data.roleIds;
    }
    return message;
  }
  toObject() {
    const data: {
      uid?: string;
      roleIds?: string[];
    } = {};
    if (this.uid != null) {
      data.uid = this.uid;
    }
    if (this.roleIds != null) {
      data.roleIds = this.roleIds;
    }
    return data;
  }
  serialize(): Uint8Array;
  serialize(w: pb_1.BinaryWriter): void;
  serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
    const writer = w || new pb_1.BinaryWriter();
    if (this.uid.length) writer.writeString(1, this.uid);
    if (this.roleIds.length) writer.writeRepeatedString(2, this.roleIds);
    if (!w) return writer.getResultBuffer();
  }
  static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CmsUsrRoleRequest {
    const reader =
        bytes instanceof pb_1.BinaryReader
          ? bytes
          : new pb_1.BinaryReader(bytes),
      message = new CmsUsrRoleRequest();
    while (reader.nextField()) {
      if (reader.isEndGroup()) break;
      switch (reader.getFieldNumber()) {
        case 1:
          message.uid = reader.readString();
          break;
        case 2:
          pb_1.Message.addToRepeatedField(message, 2, reader.readString());
          break;
        default:
          reader.skipField();
      }
    }
    return message;
  }
  serializeBinary(): Uint8Array {
    return this.serialize();
  }
  static deserializeBinary(bytes: Uint8Array): CmsUsrRoleRequest {
    return CmsUsrRoleRequest.deserialize(bytes);
  }
}
