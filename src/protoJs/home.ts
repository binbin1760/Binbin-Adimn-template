/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: home.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./enums";
import * as dependency_2 from "./payload";
import * as dependency_3 from "./page";
import * as dependency_4 from "./merchant";
import * as dependency_5 from "./purchase-package";
import * as pb_1 from "google-protobuf";
export class MerchantPageFilterRequest extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        page?: dependency_3.PagerRequest;
        blurry?: string;
        latitude?: number;
        longitude?: number;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("page" in data && data.page != undefined) {
                this.page = data.page;
            }
            if ("blurry" in data && data.blurry != undefined) {
                this.blurry = data.blurry;
            }
            if ("latitude" in data && data.latitude != undefined) {
                this.latitude = data.latitude;
            }
            if ("longitude" in data && data.longitude != undefined) {
                this.longitude = data.longitude;
            }
        }
    }
    get page() {
        return pb_1.Message.getWrapperField(this, dependency_3.PagerRequest, 1) as dependency_3.PagerRequest;
    }
    set page(value: dependency_3.PagerRequest) {
        pb_1.Message.setWrapperField(this, 1, value);
    }
    get hasPage() {
        return pb_1.Message.getField(this, 1) != null;
    }
    get blurry() {
        return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
    }
    set blurry(value: string) {
        pb_1.Message.setField(this, 2, value);
    }
    get latitude() {
        return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
    }
    set latitude(value: number) {
        pb_1.Message.setField(this, 3, value);
    }
    get longitude() {
        return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
    }
    set longitude(value: number) {
        pb_1.Message.setField(this, 4, value);
    }
    static fromObject(data: {
        page?: ReturnType<typeof dependency_3.PagerRequest.prototype.toObject>;
        blurry?: string;
        latitude?: number;
        longitude?: number;
    }): MerchantPageFilterRequest {
        const message = new MerchantPageFilterRequest({});
        if (data.page != null) {
            message.page = dependency_3.PagerRequest.fromObject(data.page);
        }
        if (data.blurry != null) {
            message.blurry = data.blurry;
        }
        if (data.latitude != null) {
            message.latitude = data.latitude;
        }
        if (data.longitude != null) {
            message.longitude = data.longitude;
        }
        return message;
    }
    toObject() {
        const data: {
            page?: ReturnType<typeof dependency_3.PagerRequest.prototype.toObject>;
            blurry?: string;
            latitude?: number;
            longitude?: number;
        } = {};
        if (this.page != null) {
            data.page = this.page.toObject();
        }
        if (this.blurry != null) {
            data.blurry = this.blurry;
        }
        if (this.latitude != null) {
            data.latitude = this.latitude;
        }
        if (this.longitude != null) {
            data.longitude = this.longitude;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.hasPage)
            writer.writeMessage(1, this.page, () => this.page.serialize(writer));
        if (this.blurry.length)
            writer.writeString(2, this.blurry);
        if (this.latitude != 0)
            writer.writeDouble(3, this.latitude);
        if (this.longitude != 0)
            writer.writeDouble(4, this.longitude);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MerchantPageFilterRequest {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MerchantPageFilterRequest();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    reader.readMessage(message.page, () => message.page = dependency_3.PagerRequest.deserialize(reader));
                    break;
                case 2:
                    message.blurry = reader.readString();
                    break;
                case 3:
                    message.latitude = reader.readDouble();
                    break;
                case 4:
                    message.longitude = reader.readDouble();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): MerchantPageFilterRequest {
        return MerchantPageFilterRequest.deserialize(bytes);
    }
}
export class MerchantPageResponse extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        page?: dependency_3.PagerResponse;
        raws?: MerchantCell[];
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("page" in data && data.page != undefined) {
                this.page = data.page;
            }
            if ("raws" in data && data.raws != undefined) {
                this.raws = data.raws;
            }
        }
    }
    get page() {
        return pb_1.Message.getWrapperField(this, dependency_3.PagerResponse, 1) as dependency_3.PagerResponse;
    }
    set page(value: dependency_3.PagerResponse) {
        pb_1.Message.setWrapperField(this, 1, value);
    }
    get hasPage() {
        return pb_1.Message.getField(this, 1) != null;
    }
    get raws() {
        return pb_1.Message.getRepeatedWrapperField(this, MerchantCell, 2) as MerchantCell[];
    }
    set raws(value: MerchantCell[]) {
        pb_1.Message.setRepeatedWrapperField(this, 2, value);
    }
    static fromObject(data: {
        page?: ReturnType<typeof dependency_3.PagerResponse.prototype.toObject>;
        raws?: ReturnType<typeof MerchantCell.prototype.toObject>[];
    }): MerchantPageResponse {
        const message = new MerchantPageResponse({});
        if (data.page != null) {
            message.page = dependency_3.PagerResponse.fromObject(data.page);
        }
        if (data.raws != null) {
            message.raws = data.raws.map(item => MerchantCell.fromObject(item));
        }
        return message;
    }
    toObject() {
        const data: {
            page?: ReturnType<typeof dependency_3.PagerResponse.prototype.toObject>;
            raws?: ReturnType<typeof MerchantCell.prototype.toObject>[];
        } = {};
        if (this.page != null) {
            data.page = this.page.toObject();
        }
        if (this.raws != null) {
            data.raws = this.raws.map((item: MerchantCell) => item.toObject());
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.hasPage)
            writer.writeMessage(1, this.page, () => this.page.serialize(writer));
        if (this.raws.length)
            writer.writeRepeatedMessage(2, this.raws, (item: MerchantCell) => item.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MerchantPageResponse {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MerchantPageResponse();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    reader.readMessage(message.page, () => message.page = dependency_3.PagerResponse.deserialize(reader));
                    break;
                case 2:
                    reader.readMessage(message.raws, () => pb_1.Message.addToRepeatedWrapperField(message, 2, MerchantCell.deserialize(reader), MerchantCell));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): MerchantPageResponse {
        return MerchantPageResponse.deserialize(bytes);
    }
}
export class MerchantCell extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        id?: string;
        name?: string;
        theme?: dependency_2.MediaMetaModel;
        rating?: number;
        tags?: string[];
        addr?: string;
        distance?: number;
        promotions?: dependency_5.PromotionCell[];
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [5, 8], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("id" in data && data.id != undefined) {
                this.id = data.id;
            }
            if ("name" in data && data.name != undefined) {
                this.name = data.name;
            }
            if ("theme" in data && data.theme != undefined) {
                this.theme = data.theme;
            }
            if ("rating" in data && data.rating != undefined) {
                this.rating = data.rating;
            }
            if ("tags" in data && data.tags != undefined) {
                this.tags = data.tags;
            }
            if ("addr" in data && data.addr != undefined) {
                this.addr = data.addr;
            }
            if ("distance" in data && data.distance != undefined) {
                this.distance = data.distance;
            }
            if ("promotions" in data && data.promotions != undefined) {
                this.promotions = data.promotions;
            }
        }
    }
    get id() {
        return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
    }
    set id(value: string) {
        pb_1.Message.setField(this, 1, value);
    }
    get name() {
        return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
    }
    set name(value: string) {
        pb_1.Message.setField(this, 2, value);
    }
    get theme() {
        return pb_1.Message.getWrapperField(this, dependency_2.MediaMetaModel, 3) as dependency_2.MediaMetaModel;
    }
    set theme(value: dependency_2.MediaMetaModel) {
        pb_1.Message.setWrapperField(this, 3, value);
    }
    get hasTheme() {
        return pb_1.Message.getField(this, 3) != null;
    }
    get rating() {
        return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
    }
    set rating(value: number) {
        pb_1.Message.setField(this, 4, value);
    }
    get tags() {
        return pb_1.Message.getFieldWithDefault(this, 5, []) as string[];
    }
    set tags(value: string[]) {
        pb_1.Message.setField(this, 5, value);
    }
    get addr() {
        return pb_1.Message.getFieldWithDefault(this, 6, "") as string;
    }
    set addr(value: string) {
        pb_1.Message.setField(this, 6, value);
    }
    get distance() {
        return pb_1.Message.getFieldWithDefault(this, 7, 0) as number;
    }
    set distance(value: number) {
        pb_1.Message.setField(this, 7, value);
    }
    get promotions() {
        return pb_1.Message.getRepeatedWrapperField(this, dependency_5.PromotionCell, 8) as dependency_5.PromotionCell[];
    }
    set promotions(value: dependency_5.PromotionCell[]) {
        pb_1.Message.setRepeatedWrapperField(this, 8, value);
    }
    static fromObject(data: {
        id?: string;
        name?: string;
        theme?: ReturnType<typeof dependency_2.MediaMetaModel.prototype.toObject>;
        rating?: number;
        tags?: string[];
        addr?: string;
        distance?: number;
        promotions?: ReturnType<typeof dependency_5.PromotionCell.prototype.toObject>[];
    }): MerchantCell {
        const message = new MerchantCell({});
        if (data.id != null) {
            message.id = data.id;
        }
        if (data.name != null) {
            message.name = data.name;
        }
        if (data.theme != null) {
            message.theme = dependency_2.MediaMetaModel.fromObject(data.theme);
        }
        if (data.rating != null) {
            message.rating = data.rating;
        }
        if (data.tags != null) {
            message.tags = data.tags;
        }
        if (data.addr != null) {
            message.addr = data.addr;
        }
        if (data.distance != null) {
            message.distance = data.distance;
        }
        if (data.promotions != null) {
            message.promotions = data.promotions.map(item => dependency_5.PromotionCell.fromObject(item));
        }
        return message;
    }
    toObject() {
        const data: {
            id?: string;
            name?: string;
            theme?: ReturnType<typeof dependency_2.MediaMetaModel.prototype.toObject>;
            rating?: number;
            tags?: string[];
            addr?: string;
            distance?: number;
            promotions?: ReturnType<typeof dependency_5.PromotionCell.prototype.toObject>[];
        } = {};
        if (this.id != null) {
            data.id = this.id;
        }
        if (this.name != null) {
            data.name = this.name;
        }
        if (this.theme != null) {
            data.theme = this.theme.toObject();
        }
        if (this.rating != null) {
            data.rating = this.rating;
        }
        if (this.tags != null) {
            data.tags = this.tags;
        }
        if (this.addr != null) {
            data.addr = this.addr;
        }
        if (this.distance != null) {
            data.distance = this.distance;
        }
        if (this.promotions != null) {
            data.promotions = this.promotions.map((item: dependency_5.PromotionCell) => item.toObject());
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.id.length)
            writer.writeString(1, this.id);
        if (this.name.length)
            writer.writeString(2, this.name);
        if (this.hasTheme)
            writer.writeMessage(3, this.theme, () => this.theme.serialize(writer));
        if (this.rating != 0)
            writer.writeFloat(4, this.rating);
        if (this.tags.length)
            writer.writeRepeatedString(5, this.tags);
        if (this.addr.length)
            writer.writeString(6, this.addr);
        if (this.distance != 0)
            writer.writeDouble(7, this.distance);
        if (this.promotions.length)
            writer.writeRepeatedMessage(8, this.promotions, (item: dependency_5.PromotionCell) => item.serialize(writer));
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MerchantCell {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MerchantCell();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    message.id = reader.readString();
                    break;
                case 2:
                    message.name = reader.readString();
                    break;
                case 3:
                    reader.readMessage(message.theme, () => message.theme = dependency_2.MediaMetaModel.deserialize(reader));
                    break;
                case 4:
                    message.rating = reader.readFloat();
                    break;
                case 5:
                    pb_1.Message.addToRepeatedField(message, 5, reader.readString());
                    break;
                case 6:
                    message.addr = reader.readString();
                    break;
                case 7:
                    message.distance = reader.readDouble();
                    break;
                case 8:
                    reader.readMessage(message.promotions, () => pb_1.Message.addToRepeatedWrapperField(message, 8, dependency_5.PromotionCell.deserialize(reader), dependency_5.PromotionCell));
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): MerchantCell {
        return MerchantCell.deserialize(bytes);
    }
}
