/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: server/cms-approval.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
// @ts-nocheck
import * as dependency_1 from "./enums";
import * as pb_1 from "google-protobuf";
export class ApprovalRequest extends pb_1.Message {
  #one_of_decls: number[][] = [];
  constructor(
    data?:
      | any[]
      | {
          stat?: dependency_1.ApprovalStat;
          reason?: string;
        }
  ) {
    super();
    pb_1.Message.initialize(
      this,
      Array.isArray(data) ? data : [],
      0,
      -1,
      [],
      this.#one_of_decls
    );
    if (!Array.isArray(data) && typeof data == "object") {
      if ("stat" in data && data.stat != undefined) {
        this.stat = data.stat;
      }
      if ("reason" in data && data.reason != undefined) {
        this.reason = data.reason;
      }
    }
  }
  get stat() {
    return pb_1.Message.getFieldWithDefault(
      this,
      1,
      dependency_1.ApprovalStat._ApprovalStat_UNSPECIFIED
    ) as dependency_1.ApprovalStat;
  }
  set stat(value: dependency_1.ApprovalStat) {
    pb_1.Message.setField(this, 1, value);
  }
  get reason() {
    return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
  }
  set reason(value: string) {
    pb_1.Message.setField(this, 2, value);
  }
  static fromObject(data: {
    stat?: dependency_1.ApprovalStat;
    reason?: string;
  }): ApprovalRequest {
    const message = new ApprovalRequest({});
    if (data.stat != null) {
      message.stat = data.stat;
    }
    if (data.reason != null) {
      message.reason = data.reason;
    }
    return message;
  }
  toObject() {
    const data: {
      stat?: dependency_1.ApprovalStat;
      reason?: string;
    } = {};
    if (this.stat != null) {
      data.stat = this.stat;
    }
    if (this.reason != null) {
      data.reason = this.reason;
    }
    return data;
  }
  serialize(): Uint8Array;
  serialize(w: pb_1.BinaryWriter): void;
  serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
    const writer = w || new pb_1.BinaryWriter();
    if (this.stat != dependency_1.ApprovalStat._ApprovalStat_UNSPECIFIED)
      writer.writeEnum(1, this.stat);
    if (this.reason.length) writer.writeString(2, this.reason);
    if (!w) return writer.getResultBuffer();
  }
  static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ApprovalRequest {
    const reader =
        bytes instanceof pb_1.BinaryReader
          ? bytes
          : new pb_1.BinaryReader(bytes),
      message = new ApprovalRequest();
    while (reader.nextField()) {
      if (reader.isEndGroup()) break;
      switch (reader.getFieldNumber()) {
        case 1:
          message.stat = reader.readEnum();
          break;
        case 2:
          message.reason = reader.readString();
          break;
        default:
          reader.skipField();
      }
    }
    return message;
  }
  serializeBinary(): Uint8Array {
    return this.serialize();
  }
  static deserializeBinary(bytes: Uint8Array): ApprovalRequest {
    return ApprovalRequest.deserialize(bytes);
  }
}
