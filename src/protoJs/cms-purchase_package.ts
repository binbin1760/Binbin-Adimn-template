/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: server/cms-purchase_package.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./enums";
import * as dependency_2 from "./page";
import * as pb_1 from "google-protobuf";
export class TableCmsPurchasePackageFilterRequest extends pb_1.Message {
  #one_of_decls: number[][] = [];
  constructor(
    data?:
      | any[]
      | {
          page?: dependency_2.PagerRequest;
          blurry?: string;
          categories?: number[];
          stat?: dependency_1.ApprovalStat;
        }
  ) {
    super();
    pb_1.Message.initialize(
      this,
      Array.isArray(data) ? data : [],
      0,
      -1,
      [3],
      this.#one_of_decls
    );
    if (!Array.isArray(data) && typeof data == "object") {
      if ("page" in data && data.page != undefined) {
        this.page = data.page;
      }
      if ("blurry" in data && data.blurry != undefined) {
        this.blurry = data.blurry;
      }
      if ("categories" in data && data.categories != undefined) {
        this.categories = data.categories;
      }
      if ("stat" in data && data.stat != undefined) {
        this.stat = data.stat;
      }
    }
  }
  get page() {
    return pb_1.Message.getWrapperField(
      this,
      dependency_2.PagerRequest,
      1
    ) as dependency_2.PagerRequest;
  }
  set page(value: dependency_2.PagerRequest) {
    pb_1.Message.setWrapperField(this, 1, value);
  }
  get hasPage() {
    return pb_1.Message.getField(this, 1) != null;
  }
  get blurry() {
    return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
  }
  set blurry(value: string) {
    pb_1.Message.setField(this, 2, value);
  }
  get categories() {
    return pb_1.Message.getFieldWithDefault(this, 3, []) as number[];
  }
  set categories(value: number[]) {
    pb_1.Message.setField(this, 3, value);
  }
  get stat() {
    return pb_1.Message.getFieldWithDefault(
      this,
      4,
      dependency_1.ApprovalStat._ApprovalStat_UNSPECIFIED
    ) as dependency_1.ApprovalStat;
  }
  set stat(value: dependency_1.ApprovalStat) {
    pb_1.Message.setField(this, 4, value);
  }
  static fromObject(data: {
    page?: ReturnType<typeof dependency_2.PagerRequest.prototype.toObject>;
    blurry?: string;
    categories?: number[];
    stat?: dependency_1.ApprovalStat;
  }): TableCmsPurchasePackageFilterRequest {
    const message = new TableCmsPurchasePackageFilterRequest({});
    if (data.page != null) {
      message.page = dependency_2.PagerRequest.fromObject(data.page);
    }
    if (data.blurry != null) {
      message.blurry = data.blurry;
    }
    if (data.categories != null) {
      message.categories = data.categories;
    }
    if (data.stat != null) {
      message.stat = data.stat;
    }
    return message;
  }
  toObject() {
    const data: {
      page?: ReturnType<typeof dependency_2.PagerRequest.prototype.toObject>;
      blurry?: string;
      categories?: number[];
      stat?: dependency_1.ApprovalStat;
    } = {};
    if (this.page != null) {
      data.page = this.page.toObject();
    }
    if (this.blurry != null) {
      data.blurry = this.blurry;
    }
    if (this.categories != null) {
      data.categories = this.categories;
    }
    if (this.stat != null) {
      data.stat = this.stat;
    }
    return data;
  }
  serialize(): Uint8Array;
  serialize(w: pb_1.BinaryWriter): void;
  serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
    const writer = w || new pb_1.BinaryWriter();
    if (this.hasPage)
      writer.writeMessage(1, this.page, () => this.page.serialize(writer));
    if (this.blurry.length) writer.writeString(2, this.blurry);
    if (this.categories.length) writer.writePackedInt32(3, this.categories);
    if (this.stat != dependency_1.ApprovalStat._ApprovalStat_UNSPECIFIED)
      writer.writeEnum(4, this.stat);
    if (!w) return writer.getResultBuffer();
  }
  static deserialize(
    bytes: Uint8Array | pb_1.BinaryReader
  ): TableCmsPurchasePackageFilterRequest {
    const reader =
        bytes instanceof pb_1.BinaryReader
          ? bytes
          : new pb_1.BinaryReader(bytes),
      message = new TableCmsPurchasePackageFilterRequest();
    while (reader.nextField()) {
      if (reader.isEndGroup()) break;
      switch (reader.getFieldNumber()) {
        case 1:
          reader.readMessage(
            message.page,
            () => (message.page = dependency_2.PagerRequest.deserialize(reader))
          );
          break;
        case 2:
          message.blurry = reader.readString();
          break;
        case 3:
          message.categories = reader.readPackedInt32();
          break;
        case 4:
          message.stat = reader.readEnum();
          break;
        default:
          reader.skipField();
      }
    }
    return message;
  }
  serializeBinary(): Uint8Array {
    return this.serialize();
  }
  static deserializeBinary(
    bytes: Uint8Array
  ): TableCmsPurchasePackageFilterRequest {
    return TableCmsPurchasePackageFilterRequest.deserialize(bytes);
  }
}
export class TableCmsPurchasePackageFilterResponse extends pb_1.Message {
  #one_of_decls: number[][] = [];
  constructor(
    data?:
      | any[]
      | {
          page?: dependency_2.PagerResponse;
          raws?: TableCmsPurchasePackageViewModel[];
        }
  ) {
    super();
    pb_1.Message.initialize(
      this,
      Array.isArray(data) ? data : [],
      0,
      -1,
      [2],
      this.#one_of_decls
    );
    if (!Array.isArray(data) && typeof data == "object") {
      if ("page" in data && data.page != undefined) {
        this.page = data.page;
      }
      if ("raws" in data && data.raws != undefined) {
        this.raws = data.raws;
      }
    }
  }
  get page() {
    return pb_1.Message.getWrapperField(
      this,
      dependency_2.PagerResponse,
      1
    ) as dependency_2.PagerResponse;
  }
  set page(value: dependency_2.PagerResponse) {
    pb_1.Message.setWrapperField(this, 1, value);
  }
  get hasPage() {
    return pb_1.Message.getField(this, 1) != null;
  }
  get raws() {
    return pb_1.Message.getRepeatedWrapperField(
      this,
      TableCmsPurchasePackageViewModel,
      2
    ) as TableCmsPurchasePackageViewModel[];
  }
  set raws(value: TableCmsPurchasePackageViewModel[]) {
    pb_1.Message.setRepeatedWrapperField(this, 2, value);
  }
  static fromObject(data: {
    page?: ReturnType<typeof dependency_2.PagerResponse.prototype.toObject>;
    raws?: ReturnType<
      typeof TableCmsPurchasePackageViewModel.prototype.toObject
    >[];
  }): TableCmsPurchasePackageFilterResponse {
    const message = new TableCmsPurchasePackageFilterResponse({});
    if (data.page != null) {
      message.page = dependency_2.PagerResponse.fromObject(data.page);
    }
    if (data.raws != null) {
      message.raws = data.raws.map((item) =>
        TableCmsPurchasePackageViewModel.fromObject(item)
      );
    }
    return message;
  }
  toObject() {
    const data: {
      page?: ReturnType<typeof dependency_2.PagerResponse.prototype.toObject>;
      raws?: ReturnType<
        typeof TableCmsPurchasePackageViewModel.prototype.toObject
      >[];
    } = {};
    if (this.page != null) {
      data.page = this.page.toObject();
    }
    if (this.raws != null) {
      data.raws = this.raws.map((item: TableCmsPurchasePackageViewModel) =>
        item.toObject()
      );
    }
    return data;
  }
  serialize(): Uint8Array;
  serialize(w: pb_1.BinaryWriter): void;
  serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
    const writer = w || new pb_1.BinaryWriter();
    if (this.hasPage)
      writer.writeMessage(1, this.page, () => this.page.serialize(writer));
    if (this.raws.length)
      writer.writeRepeatedMessage(
        2,
        this.raws,
        (item: TableCmsPurchasePackageViewModel) => item.serialize(writer)
      );
    if (!w) return writer.getResultBuffer();
  }
  static deserialize(
    bytes: Uint8Array | pb_1.BinaryReader
  ): TableCmsPurchasePackageFilterResponse {
    const reader =
        bytes instanceof pb_1.BinaryReader
          ? bytes
          : new pb_1.BinaryReader(bytes),
      message = new TableCmsPurchasePackageFilterResponse();
    while (reader.nextField()) {
      if (reader.isEndGroup()) break;
      switch (reader.getFieldNumber()) {
        case 1:
          reader.readMessage(
            message.page,
            () =>
              (message.page = dependency_2.PagerResponse.deserialize(reader))
          );
          break;
        case 2:
          reader.readMessage(message.raws, () =>
            pb_1.Message.addToRepeatedWrapperField(
              message,
              2,
              TableCmsPurchasePackageViewModel.deserialize(reader),
              TableCmsPurchasePackageViewModel
            )
          );
          break;
        default:
          reader.skipField();
      }
    }
    return message;
  }
  serializeBinary(): Uint8Array {
    return this.serialize();
  }
  static deserializeBinary(
    bytes: Uint8Array
  ): TableCmsPurchasePackageFilterResponse {
    return TableCmsPurchasePackageFilterResponse.deserialize(bytes);
  }
}
export class TableCmsPurchasePackageViewModel extends pb_1.Message {
  #one_of_decls: number[][] = [];
  constructor(
    data?:
      | any[]
      | {
          id?: string;
          name?: string;
          merchant?: string;
          categories?: string[];
          stat?: dependency_1.ApprovalStat;
          updateAt?: number;
        }
  ) {
    super();
    pb_1.Message.initialize(
      this,
      Array.isArray(data) ? data : [],
      0,
      -1,
      [4],
      this.#one_of_decls
    );
    if (!Array.isArray(data) && typeof data == "object") {
      if ("id" in data && data.id != undefined) {
        this.id = data.id;
      }
      if ("name" in data && data.name != undefined) {
        this.name = data.name;
      }
      if ("merchant" in data && data.merchant != undefined) {
        this.merchant = data.merchant;
      }
      if ("categories" in data && data.categories != undefined) {
        this.categories = data.categories;
      }
      if ("stat" in data && data.stat != undefined) {
        this.stat = data.stat;
      }
      if ("updateAt" in data && data.updateAt != undefined) {
        this.updateAt = data.updateAt;
      }
    }
  }
  get id() {
    return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
  }
  set id(value: string) {
    pb_1.Message.setField(this, 1, value);
  }
  get name() {
    return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
  }
  set name(value: string) {
    pb_1.Message.setField(this, 2, value);
  }
  get merchant() {
    return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
  }
  set merchant(value: string) {
    pb_1.Message.setField(this, 3, value);
  }
  get categories() {
    return pb_1.Message.getFieldWithDefault(this, 4, []) as string[];
  }
  set categories(value: string[]) {
    pb_1.Message.setField(this, 4, value);
  }
  get stat() {
    return pb_1.Message.getFieldWithDefault(
      this,
      5,
      dependency_1.ApprovalStat._ApprovalStat_UNSPECIFIED
    ) as dependency_1.ApprovalStat;
  }
  set stat(value: dependency_1.ApprovalStat) {
    pb_1.Message.setField(this, 5, value);
  }
  get updateAt() {
    return pb_1.Message.getFieldWithDefault(this, 6, 0) as number;
  }
  set updateAt(value: number) {
    pb_1.Message.setField(this, 6, value);
  }
  static fromObject(data: {
    id?: string;
    name?: string;
    merchant?: string;
    categories?: string[];
    stat?: dependency_1.ApprovalStat;
    updateAt?: number;
  }): TableCmsPurchasePackageViewModel {
    const message = new TableCmsPurchasePackageViewModel({});
    if (data.id != null) {
      message.id = data.id;
    }
    if (data.name != null) {
      message.name = data.name;
    }
    if (data.merchant != null) {
      message.merchant = data.merchant;
    }
    if (data.categories != null) {
      message.categories = data.categories;
    }
    if (data.stat != null) {
      message.stat = data.stat;
    }
    if (data.updateAt != null) {
      message.updateAt = data.updateAt;
    }
    return message;
  }
  toObject() {
    const data: {
      id?: string;
      name?: string;
      merchant?: string;
      categories?: string[];
      stat?: dependency_1.ApprovalStat;
      updateAt?: number;
    } = {};
    if (this.id != null) {
      data.id = this.id;
    }
    if (this.name != null) {
      data.name = this.name;
    }
    if (this.merchant != null) {
      data.merchant = this.merchant;
    }
    if (this.categories != null) {
      data.categories = this.categories;
    }
    if (this.stat != null) {
      data.stat = this.stat;
    }
    if (this.updateAt != null) {
      data.updateAt = this.updateAt;
    }
    return data;
  }
  serialize(): Uint8Array;
  serialize(w: pb_1.BinaryWriter): void;
  serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
    const writer = w || new pb_1.BinaryWriter();
    if (this.id.length) writer.writeString(1, this.id);
    if (this.name.length) writer.writeString(2, this.name);
    if (this.merchant.length) writer.writeString(3, this.merchant);
    if (this.categories.length) writer.writeRepeatedString(4, this.categories);
    if (this.stat != dependency_1.ApprovalStat._ApprovalStat_UNSPECIFIED)
      writer.writeEnum(5, this.stat);
    if (this.updateAt != 0) writer.writeUint64(6, this.updateAt);
    if (!w) return writer.getResultBuffer();
  }
  static deserialize(
    bytes: Uint8Array | pb_1.BinaryReader
  ): TableCmsPurchasePackageViewModel {
    const reader =
        bytes instanceof pb_1.BinaryReader
          ? bytes
          : new pb_1.BinaryReader(bytes),
      message = new TableCmsPurchasePackageViewModel();
    while (reader.nextField()) {
      if (reader.isEndGroup()) break;
      switch (reader.getFieldNumber()) {
        case 1:
          message.id = reader.readString();
          break;
        case 2:
          message.name = reader.readString();
          break;
        case 3:
          message.merchant = reader.readString();
          break;
        case 4:
          pb_1.Message.addToRepeatedField(message, 4, reader.readString());
          break;
        case 5:
          message.stat = reader.readEnum();
          break;
        case 6:
          message.updateAt = reader.readUint64();
          break;
        default:
          reader.skipField();
      }
    }
    return message;
  }
  serializeBinary(): Uint8Array {
    return this.serialize();
  }
  static deserializeBinary(
    bytes: Uint8Array
  ): TableCmsPurchasePackageViewModel {
    return TableCmsPurchasePackageViewModel.deserialize(bytes);
  }
}
