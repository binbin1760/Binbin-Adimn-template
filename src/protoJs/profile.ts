/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 3.20.3
 * source: profile.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./enums";
import * as pb_1 from "google-protobuf";
export class UserProfileModel extends pb_1.Message {
    #one_of_decls: number[][] = [];
    constructor(data?: any[] | {
        nickname?: string;
        bio?: string;
        gender?: dependency_1.Gender;
        birthday?: number;
    }) {
        super();
        pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
        if (!Array.isArray(data) && typeof data == "object") {
            if ("nickname" in data && data.nickname != undefined) {
                this.nickname = data.nickname;
            }
            if ("bio" in data && data.bio != undefined) {
                this.bio = data.bio;
            }
            if ("gender" in data && data.gender != undefined) {
                this.gender = data.gender;
            }
            if ("birthday" in data && data.birthday != undefined) {
                this.birthday = data.birthday;
            }
        }
    }
    get nickname() {
        return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
    }
    set nickname(value: string) {
        pb_1.Message.setField(this, 1, value);
    }
    get bio() {
        return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
    }
    set bio(value: string) {
        pb_1.Message.setField(this, 2, value);
    }
    get gender() {
        return pb_1.Message.getFieldWithDefault(this, 3, dependency_1.Gender._Gender_UNSPECIFIED) as dependency_1.Gender;
    }
    set gender(value: dependency_1.Gender) {
        pb_1.Message.setField(this, 3, value);
    }
    get birthday() {
        return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
    }
    set birthday(value: number) {
        pb_1.Message.setField(this, 4, value);
    }
    static fromObject(data: {
        nickname?: string;
        bio?: string;
        gender?: dependency_1.Gender;
        birthday?: number;
    }): UserProfileModel {
        const message = new UserProfileModel({});
        if (data.nickname != null) {
            message.nickname = data.nickname;
        }
        if (data.bio != null) {
            message.bio = data.bio;
        }
        if (data.gender != null) {
            message.gender = data.gender;
        }
        if (data.birthday != null) {
            message.birthday = data.birthday;
        }
        return message;
    }
    toObject() {
        const data: {
            nickname?: string;
            bio?: string;
            gender?: dependency_1.Gender;
            birthday?: number;
        } = {};
        if (this.nickname != null) {
            data.nickname = this.nickname;
        }
        if (this.bio != null) {
            data.bio = this.bio;
        }
        if (this.gender != null) {
            data.gender = this.gender;
        }
        if (this.birthday != null) {
            data.birthday = this.birthday;
        }
        return data;
    }
    serialize(): Uint8Array;
    serialize(w: pb_1.BinaryWriter): void;
    serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
        const writer = w || new pb_1.BinaryWriter();
        if (this.nickname.length)
            writer.writeString(1, this.nickname);
        if (this.bio.length)
            writer.writeString(2, this.bio);
        if (this.gender != dependency_1.Gender._Gender_UNSPECIFIED)
            writer.writeEnum(3, this.gender);
        if (this.birthday != 0)
            writer.writeUint64(4, this.birthday);
        if (!w)
            return writer.getResultBuffer();
    }
    static deserialize(bytes: Uint8Array | pb_1.BinaryReader): UserProfileModel {
        const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new UserProfileModel();
        while (reader.nextField()) {
            if (reader.isEndGroup())
                break;
            switch (reader.getFieldNumber()) {
                case 1:
                    message.nickname = reader.readString();
                    break;
                case 2:
                    message.bio = reader.readString();
                    break;
                case 3:
                    message.gender = reader.readEnum();
                    break;
                case 4:
                    message.birthday = reader.readUint64();
                    break;
                default: reader.skipField();
            }
        }
        return message;
    }
    serializeBinary(): Uint8Array {
        return this.serialize();
    }
    static deserializeBinary(bytes: Uint8Array): UserProfileModel {
        return UserProfileModel.deserialize(bytes);
    }
}
